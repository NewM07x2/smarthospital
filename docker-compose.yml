version: '3.8'

services:
  # -----------------------------------------------------
  # 1. データベース (MySQL)
  # -----------------------------------------------------
  db:
    image: mysql:8.0
    container_name: mysql_db
    # .envから環境変数を読み込む
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: 'Asia/Tokyo'
    volumes:
      - db-data:/var/lib/mysql # データを永続化
    ports:
      - "3306:3306" # ホストから直接アクセスしたい場合
    networks:
      - app-network

  # -----------------------------------------------------
  # 2. PHP-FPM (Laravel バックエンド実行環境)
  # -----------------------------------------------------
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: laravel_app
    volumes:
      - ./laravel:/var/www/html # Laravelコードをマウント
    environment:
      # Laravelの.envで利用するDB接続情報
      DB_CONNECTION: mysql
      DB_HOST: db # service名がホスト名になる
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - app-network

  # -----------------------------------------------------
  # 3. Webサーバー (Nginx)
  # -----------------------------------------------------
  web:
    image: nginx:stable-alpine
    container_name: nginx_web
    volumes:
      - ./laravel:/var/www/html # Laravelコードをマウント
      # Nginxの設定ファイルをマウント (別途作成が必要だが、今回はデフォルト設定で進行)
      # - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80" # ホストの8000ポートでLaravelにアクセス
    depends_on:
      - app
    networks:
      - app-network

  # -----------------------------------------------------
  # 4. Node.js (React フロントエンド実行環境)
  # -----------------------------------------------------
  frontend:
      image: node:18-alpine # より新しいLTSのNodeバージョンを使用
      container_name: react_front
      working_dir: /app
      volumes:
          - ./react-app:/app # マウントディレクトリを 'react-app' に変更
      ports:
          - "3000:3000" # ホストの3000ポートでReactにアクセス
      # Reactプロジェクトを起動するコマンドに後で変更します
      command: sh -c "npm install && npm run start"
      networks:
          - app-network

# ネットワーク定義
networks:
  app-network:
    driver: bridge

# 永続化ボリューム定義
volumes:
  db-data:
    driver: local